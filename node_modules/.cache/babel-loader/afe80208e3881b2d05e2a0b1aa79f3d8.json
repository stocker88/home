{"ast":null,"code":"var _jsxFileName = \"/Users/aness/Desktop/factors/stockerwebsite/src/components/sections/blog_articles/Attribution.js\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { SectionSplitProps } from '../../../utils/SectionProps';\nimport SectionHeader2 from '.././partials/SectionHeader2';\nimport Image from '../../elements/Image';\nimport Button from '../../elements/Button';\nimport ButtonGroup from '../../elements/ButtonGroup';\nimport { useState } from 'react';\nimport Modal from '../../elements/Modal';\nimport ContactForm from '../../elements/ContactUs';\nimport history from '../../../history';\nimport MarkdownRender from '../../Markdown.component';\nimport ReactMarkdown from \"react-markdown\";\nconst propTypes = { ...SectionSplitProps.types\n};\nconst defaultProps = { ...SectionSplitProps.defaults\n};\nconst innerClasses = classNames('hero-inner section-inner');\n\nconst Attribution = ({\n  className,\n  topOuterDivider,\n  bottomOuterDivider,\n  topDivider,\n  bottomDivider,\n  hasBgColor,\n  invertColor,\n  invertMobile,\n  invertDesktop,\n  alignTop,\n  imageFill,\n  ...props\n}) => {\n  const [videoModalActive, setVideomodalactive] = useState(false);\n  const [pictureActive, setPictureActive] = useState(false);\n  const showContactForm = useState(false);\n\n  const openModal = e => {\n    e.preventDefault();\n    setVideomodalactive(true);\n  };\n\n  const openPicture = e => {\n    e.preventDefault();\n    setPictureActive(true);\n  };\n\n  const closeModal = e => {\n    e.preventDefault();\n    setVideomodalactive(false);\n  };\n\n  const closePicture = e => {\n    e.preventDefault();\n    setPictureActive(false);\n  };\n\n  const outerClasses = classNames('features-split section', \"scroll-to-top\", topOuterDivider && 'has-top-divider', bottomOuterDivider && 'has-bottom-divider', hasBgColor && 'has-bg-color', invertColor && 'invert-color', className);\n  const innerClasses = classNames('features-split-inner section-inner', topDivider && 'has-top-divider', bottomDivider && 'has-bottom-divider');\n  const splitClasses = classNames('split-wrap', invertMobile && 'invert-mobile', invertDesktop && 'invert-desktop', alignTop && 'align-top');\n  const markdown = `\nGiven a **formula** below\n$$\ns = ut + \\\\frac{1}{2}at^{2}\n$$\nCalculate the value of $s$ when $u = 10\\\\frac{m}{s}$ and $a = 2\\\\frac{m}{s^{2}}$ at $t = 1s$\n\n`;\n\n  const MathJax = require('react-mathjax');\n\n  const tex = `f(x) = \\\\int_{-\\\\infty}^\\\\infty\n    \\\\hat f(\\\\xi)\\\\,e^{2 \\\\pi i \\\\xi x}\n    \\\\,d\\\\xi`;\n  return /*#__PURE__*/React.createElement(MathJax.Provider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 2\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 14\n    }\n  }, \"This is an inline math formula: \", /*#__PURE__*/React.createElement(MathJax.Node, {\n    inline: true,\n    formula: 'a = b',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 50\n    }\n  }), \"And a block one:\", /*#__PURE__*/React.createElement(MathJax.Node, {\n    formula: tex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 18\n    }\n  })));\n};\n\nAttribution.propTypes = propTypes;\nAttribution.defaultProps = defaultProps;\nexport default Attribution;","map":{"version":3,"sources":["/Users/aness/Desktop/factors/stockerwebsite/src/components/sections/blog_articles/Attribution.js"],"names":["React","classNames","SectionSplitProps","SectionHeader2","Image","Button","ButtonGroup","useState","Modal","ContactForm","history","MarkdownRender","ReactMarkdown","propTypes","types","defaultProps","defaults","innerClasses","Attribution","className","topOuterDivider","bottomOuterDivider","topDivider","bottomDivider","hasBgColor","invertColor","invertMobile","invertDesktop","alignTop","imageFill","props","videoModalActive","setVideomodalactive","pictureActive","setPictureActive","showContactForm","openModal","e","preventDefault","openPicture","closeModal","closePicture","outerClasses","splitClasses","markdown","MathJax","require","tex"],"mappings":"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","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { SectionSplitProps } from '../../../utils/SectionProps';\nimport SectionHeader2 from '.././partials/SectionHeader2';\nimport Image from '../../elements/Image';\nimport Button from '../../elements/Button';\nimport ButtonGroup from '../../elements/ButtonGroup';\nimport { useState } from 'react';\nimport Modal from '../../elements/Modal';\nimport ContactForm from '../../elements/ContactUs';\nimport history from '../../../history';\nimport MarkdownRender from '../../Markdown.component';\nimport ReactMarkdown from \"react-markdown\";\n\nconst propTypes = {\n  ...SectionSplitProps.types\n}\n\nconst defaultProps = {\n  ...SectionSplitProps.defaults\n}\n\nconst innerClasses = classNames(\n'hero-inner section-inner',\n);\n\n\nconst Attribution = ({\n  className,\n  topOuterDivider,\n  bottomOuterDivider,\n  topDivider,\n  bottomDivider,\n  hasBgColor,\n  invertColor,\n  invertMobile,\n  invertDesktop,\n  alignTop,\n  imageFill,\n  ...props\n}) => {\n\n\n  const [videoModalActive, setVideomodalactive] = useState(false);\n  const [pictureActive, setPictureActive] = useState(false);\n  const showContactForm = useState(false)\n\n  const openModal = (e) => {\n    e.preventDefault();\n    setVideomodalactive(true);\n  }\n\n  const openPicture = (e) => {\n    e.preventDefault();\n    setPictureActive(true);\n  }\n\n  const closeModal = (e) => {\n    e.preventDefault();\n    setVideomodalactive(false);\n  }\n\n  const closePicture = (e) => {\n    e.preventDefault();\n    setPictureActive(false);\n  }\n\n  const outerClasses = classNames(\n    'features-split section',\n    \"scroll-to-top\",\n    topOuterDivider && 'has-top-divider',\n    bottomOuterDivider && 'has-bottom-divider',\n    hasBgColor && 'has-bg-color',\n    invertColor && 'invert-color',\n    className\n  );\n\n  const innerClasses = classNames(\n    'features-split-inner section-inner',\n    topDivider && 'has-top-divider',\n    bottomDivider && 'has-bottom-divider'\n  );\n\n  const splitClasses = classNames(\n    'split-wrap',\n    invertMobile && 'invert-mobile',\n    invertDesktop && 'invert-desktop',\n    alignTop && 'align-top'\n  );\n\nconst markdown = `\nGiven a **formula** below\n$$\ns = ut + \\\\frac{1}{2}at^{2}\n$$\nCalculate the value of $s$ when $u = 10\\\\frac{m}{s}$ and $a = 2\\\\frac{m}{s^{2}}$ at $t = 1s$\n\n`;\nconst MathJax = require('react-mathjax')\nconst tex = `f(x) = \\\\int_{-\\\\infty}^\\\\infty\n    \\\\hat f(\\\\xi)\\\\,e^{2 \\\\pi i \\\\xi x}\n    \\\\,d\\\\xi`\n\n\n  return (\n <MathJax.Provider>\n             <div>\n                 This is an inline math formula: <MathJax.Node inline formula={'a = b'} />\n                 And a block one:\n\n                 <MathJax.Node formula={tex} />\n             </div>\n         </MathJax.Provider>\n  );\n}\n\nAttribution.propTypes = propTypes;\nAttribution.defaultProps = defaultProps;\n\nexport default Attribution;\n"]},"metadata":{},"sourceType":"module"}