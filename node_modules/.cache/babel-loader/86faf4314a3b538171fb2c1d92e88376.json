{"ast":null,"code":"var _jsxFileName = \"/Users/aness/Desktop/factors/stockerwebsite/src/components/sections/blog_articles/Attribution.js\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { SectionSplitProps } from '../../../utils/SectionProps';\nimport SectionHeader2 from '.././partials/SectionHeader2';\nimport Image from '../../elements/Image';\nimport Button from '../../elements/Button';\nimport ButtonGroup from '../../elements/ButtonGroup';\nimport { useState } from 'react';\nimport Modal from '../../elements/Modal';\nimport ContactForm from '../../elements/ContactUs';\nimport history from '../../../history';\nimport MathJax from 'react-mathjax2';\nconst ascii = 'U = 1/(R_(si) + sum_(i=1)^n(s_n/lambda_n) + R_(se))';\nconst content = `This can be dynamic text (e.g. user-entered) text with ascii math embedded in $$ symbols like $$${ascii}$$`;\nconst propTypes = { ...SectionSplitProps.types\n};\nconst defaultProps = { ...SectionSplitProps.defaults\n};\nconst innerClasses = classNames('hero-inner section-inner');\n\nconst Attribution = ({\n  className,\n  topOuterDivider,\n  bottomOuterDivider,\n  topDivider,\n  bottomDivider,\n  hasBgColor,\n  invertColor,\n  invertMobile,\n  invertDesktop,\n  alignTop,\n  imageFill,\n  ...props\n}) => {\n  const [videoModalActive, setVideomodalactive] = useState(false);\n  const [pictureActive, setPictureActive] = useState(false);\n  const showContactForm = useState(false);\n\n  const openModal = e => {\n    e.preventDefault();\n    setVideomodalactive(true);\n  };\n\n  const openPicture = e => {\n    e.preventDefault();\n    setPictureActive(true);\n  };\n\n  const closeModal = e => {\n    e.preventDefault();\n    setVideomodalactive(false);\n  };\n\n  const closePicture = e => {\n    e.preventDefault();\n    setPictureActive(false);\n  };\n\n  const outerClasses = classNames('features-split section', \"scroll-to-top\", topOuterDivider && 'has-top-divider', bottomOuterDivider && 'has-bottom-divider', hasBgColor && 'has-bg-color', invertColor && 'invert-color', className);\n  const innerClasses = classNames('features-split-inner section-inner', topDivider && 'has-top-divider', bottomDivider && 'has-bottom-divider');\n  const splitClasses = classNames('split-wrap', invertMobile && 'invert-mobile', invertDesktop && 'invert-desktop', alignTop && 'align-top');\n  return /*#__PURE__*/React.createElement(MathJax.Context, {\n    input: \"ascii\",\n    onLoad: () => console.log(\"Loaded MathJax script!\"),\n    onError: (MathJax, error) => {\n      console.warn(error);\n      console.log(\"Encountered a MathJax error, re-attempting a typeset!\");\n      MathJax.Hub.Queue(MathJax.Hub.Typeset());\n    },\n    script: \"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js?config=AM_HTMLorMML\",\n    options: {\n      asciimath2jax: {\n        useMathMLspacing: true,\n        delimiters: [[\"$$\", \"$$\"]],\n        preview: \"none\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(MathJax.Text, {\n    text: content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }));\n};\n\nAttribution.propTypes = propTypes;\nAttribution.defaultProps = defaultProps;\nexport default Attribution;","map":{"version":3,"sources":["/Users/aness/Desktop/factors/stockerwebsite/src/components/sections/blog_articles/Attribution.js"],"names":["React","classNames","SectionSplitProps","SectionHeader2","Image","Button","ButtonGroup","useState","Modal","ContactForm","history","MathJax","ascii","content","propTypes","types","defaultProps","defaults","innerClasses","Attribution","className","topOuterDivider","bottomOuterDivider","topDivider","bottomDivider","hasBgColor","invertColor","invertMobile","invertDesktop","alignTop","imageFill","props","videoModalActive","setVideomodalactive","pictureActive","setPictureActive","showContactForm","openModal","e","preventDefault","openPicture","closeModal","closePicture","outerClasses","splitClasses","console","log","error","warn","Hub","Queue","Typeset","asciimath2jax","useMathMLspacing","delimiters","preview"],"mappings":"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","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { SectionSplitProps } from '../../../utils/SectionProps';\nimport SectionHeader2 from '.././partials/SectionHeader2';\nimport Image from '../../elements/Image';\nimport Button from '../../elements/Button';\nimport ButtonGroup from '../../elements/ButtonGroup';\nimport { useState } from 'react';\nimport Modal from '../../elements/Modal';\nimport ContactForm from '../../elements/ContactUs';\nimport history from '../../../history';\nimport MathJax from 'react-mathjax2'\n\nconst ascii = 'U = 1/(R_(si) + sum_(i=1)^n(s_n/lambda_n) + R_(se))'\nconst content = `This can be dynamic text (e.g. user-entered) text with ascii math embedded in $$ symbols like $$${ascii}$$`\n\nconst propTypes = {\n  ...SectionSplitProps.types\n}\n\nconst defaultProps = {\n  ...SectionSplitProps.defaults\n}\n\nconst innerClasses = classNames(\n'hero-inner section-inner',\n);\n\n\nconst Attribution = ({\n  className,\n  topOuterDivider,\n  bottomOuterDivider,\n  topDivider,\n  bottomDivider,\n  hasBgColor,\n  invertColor,\n  invertMobile,\n  invertDesktop,\n  alignTop,\n  imageFill,\n  ...props\n}) => {\n\n\n  const [videoModalActive, setVideomodalactive] = useState(false);\n  const [pictureActive, setPictureActive] = useState(false);\n  const showContactForm = useState(false)\n\n  const openModal = (e) => {\n    e.preventDefault();\n    setVideomodalactive(true);\n  }\n\n  const openPicture = (e) => {\n    e.preventDefault();\n    setPictureActive(true);\n  }\n\n  const closeModal = (e) => {\n    e.preventDefault();\n    setVideomodalactive(false);\n  }\n\n  const closePicture = (e) => {\n    e.preventDefault();\n    setPictureActive(false);\n  }\n\n  const outerClasses = classNames(\n    'features-split section',\n    \"scroll-to-top\",\n    topOuterDivider && 'has-top-divider',\n    bottomOuterDivider && 'has-bottom-divider',\n    hasBgColor && 'has-bg-color',\n    invertColor && 'invert-color',\n    className\n  );\n\n  const innerClasses = classNames(\n    'features-split-inner section-inner',\n    topDivider && 'has-top-divider',\n    bottomDivider && 'has-bottom-divider'\n  );\n\n  const splitClasses = classNames(\n    'split-wrap',\n    invertMobile && 'invert-mobile',\n    invertDesktop && 'invert-desktop',\n    alignTop && 'align-top'\n  );\n\n  return (\n\n<MathJax.Context\n            input='ascii'\n            onLoad={ () => console.log(\"Loaded MathJax script!\") }\n            onError={ (MathJax, error) => {\n                console.warn(error);\n                console.log(\"Encountered a MathJax error, re-attempting a typeset!\");\n                MathJax.Hub.Queue(\n                  MathJax.Hub.Typeset()\n                );\n            } }\n            script=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js?config=AM_HTMLorMML\"\n            options={ {\n                asciimath2jax: {\n                     useMathMLspacing: true,\n                     delimiters: [[\"$$\",\"$$\"]],\n                     preview: \"none\",\n                }\n            } }\n        >\n            <MathJax.Text text={ content }/>\n        </MathJax.Context>\n\n  );\n}\n\nAttribution.propTypes = propTypes;\nAttribution.defaultProps = defaultProps;\n\nexport default Attribution;\n"]},"metadata":{},"sourceType":"module"}