{"ast":null,"code":"var _jsxFileName = \"/Users/aness/Desktop/factors/stockerwebsite/src/components/Markdown.component.js\";\nimport ReactMarkdown from 'react-markdown';\nimport MathJax from 'react-mathjax';\nimport RemarkMathPlugin from 'remark-math';\nimport React, { Component } from 'react';\n\nfunction MarkdownRender(props) {\n  const newProps = { ...props,\n    plugins: [RemarkMathPlugin],\n    renderers: { ...props.renderers,\n      math: props => /*#__PURE__*/React.createElement(MathJax.Node, {\n        formula: props.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }\n      }),\n      inlineMath: props => /*#__PURE__*/React.createElement(MathJax.Node, {\n        inline: true,\n        formula: props.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }\n      })\n    }\n  };\n  return /*#__PURE__*/React.createElement(MathJax.Provider, {\n    input: \"tex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ReactMarkdown, Object.assign({}, newProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  })));\n}\n\nexport default MarkdownRender;","map":{"version":3,"sources":["/Users/aness/Desktop/factors/stockerwebsite/src/components/Markdown.component.js"],"names":["ReactMarkdown","MathJax","RemarkMathPlugin","React","Component","MarkdownRender","props","newProps","plugins","renderers","math","value","inlineMath"],"mappings":";AAAA,OAAOA,aAAP,MAA0B,gBAA1B;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,gBAAP,MAA6B,aAA7B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC3B,QAAMC,QAAQ,GAAG,EACb,GAAGD,KADU;AAEbE,IAAAA,OAAO,EAAE,CACPN,gBADO,CAFI;AAKbO,IAAAA,SAAS,EAAE,EACT,GAAGH,KAAK,CAACG,SADA;AAETC,MAAAA,IAAI,EAAGJ,KAAD,iBACJ,oBAAC,OAAD,CAAS,IAAT;AAAc,QAAA,OAAO,EAAEA,KAAK,CAACK,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHO;AAITC,MAAAA,UAAU,EAAGN,KAAD,iBACV,oBAAC,OAAD,CAAS,IAAT;AAAc,QAAA,MAAM,MAApB;AAAqB,QAAA,OAAO,EAAEA,KAAK,CAACK,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALO;AALE,GAAjB;AAaE,sBACE,oBAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,aAAD,oBAAmBJ,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,CADF;AAKL;;AAED,eAAeF,cAAf","sourcesContent":["import ReactMarkdown from 'react-markdown';\nimport MathJax from 'react-mathjax';\nimport RemarkMathPlugin from 'remark-math';\nimport React, { Component } from 'react'\n\nfunction MarkdownRender(props) {\n    const newProps = {\n        ...props,\n        plugins: [\n          RemarkMathPlugin,\n        ],\n        renderers: {\n          ...props.renderers,\n          math: (props) => \n            <MathJax.Node formula={props.value} />,\n          inlineMath: (props) =>\n            <MathJax.Node inline formula={props.value} />\n        }\n      };\n      return (\n        <MathJax.Provider input=\"tex\">\n            <ReactMarkdown {...newProps} />\n        </MathJax.Provider>\n      );\n}\n\nexport default MarkdownRender"]},"metadata":{},"sourceType":"module"}